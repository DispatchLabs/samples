let votes be the set of ranked votes
let currentvotes be the set of votes currently awarded to each party, with currentvotesi denoting

13
the number of current votes for party i
let limit be the least amount of votes needed in order to be considered elected
for each v in votes
i := first preference of v
currentvotesi
:= currentvotesi + 1
end for
while there are un-eliminated parties still below the vote limit
i := index of the minimum value of currentvotes
if currentvotesi < limit
divide the votes among the second-preferences of the voters that voted for i
eliminate party i from the election
end if
end while
The candidate version of the Single Transferable Vote method is similar:
let votes be the set of ranked votes
let currentvotes be the set of votes currently awarded to each candidate, with currentvotesi denoting
the number of current votes for candidate i
let limit be the least amount of votes needed in order to be considered elected
let elected be the number of candidates that are to be elected
for each v in votes
i := first preference of v
currentvotesi
:= currentvotesi + 1
end for
while the number of elected candidates are less than elected
while there are candidates still above the vote limit
i := index of the maximum value of currentvotes
if currentvotesi > limit
divide the votes among the second-preferences of the voters that voted for i
elect candidate i
end if
if currentvotesi = limit
elect candidate i
end if
end while
while there are un-eliminated candidates still below the vote limit
i := index of the minimum value of currentvotes
if currentvotesi < limit
divide the votes among the second-preferences of the voters that voted for i
eliminate candidate i from the election
end if
end while
14
end while